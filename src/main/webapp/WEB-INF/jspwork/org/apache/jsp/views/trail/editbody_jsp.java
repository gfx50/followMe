/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-06 13:48:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.trail;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import java.util.ArrayList;
import trail.model.vo.Trail;
import thread.model.vo.Thread;
import member.model.vo.Member;
import java.util.ArrayList;
import trail.model.vo.Trail;
import follow.model.vo.Follow;
import javax.servlet.http.HttpSession;

public final class editbody_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/views/trail/../common/footer.jsp", Long.valueOf(1693144244000L));
    _jspx_dependants.put("/views/trail/../common/navbar.jsp", Long.valueOf(1694005937110L));
    _jspx_dependants.put("/views/trail/../common/trailmap.jsp", Long.valueOf(1693993190847L));
    _jspx_dependants.put("/views/trail/../common/head.jsp", Long.valueOf(1693643825518L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
    _jspx_imports_classes.add("follow.model.vo.Follow");
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("trail.model.vo.Trail");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("thread.model.vo.Thread");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"/fm/views/common/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    Member member = (Member)session.getAttribute("loginMember");
	System.out.println("editbody.jsp : " + member);
    Trail trail = (Trail)request.getAttribute("trail");
    System.out.println("editbody.jsp : " + trail);
    

      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\" data-bs-theme=\"auto\">\n");
      out.write("<head>\n");
      out.write("	<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/fm/apple-touch-icon.png\">\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/fm/favicon-32x32.png\">\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/fm/favicon-16x16.png\">\n");
      out.write("<link rel=\"manifest\" href=\"/fm/site.webmanifest\">\n");
      out.write("\n");
      out.write("		<meta charset=\"utf-8\">\n");
      out.write("		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("		<meta name=\"description\" content=\"\">\n");
      out.write("		<title>FollowMe! Trail Sharing SNS</title>\n");
      out.write("	\n");
      out.write("<!-- 		<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@docsearch/css@3\"> -->\n");
      out.write("\n");
      out.write("<!-- 부트스트랩, 부트스트랩 아이콘 css, js,  jquery 로드 -->	\n");
      out.write("	<link href=\"/fm/resources/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\n");
      out.write("\n");
      out.write("	<script src=\"/fm/resources/js/jquery-3.7.0.min.js\"></script>\n");
      out.write("	<script src=\"/fm/resources/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- 수제 css , js 로드 -->\n");
      out.write("	<link href=\"/fm/resources/css/fm.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("	<script src=\"/fm/resources/js/fm.js\"></script>\n");
      out.write("	\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("var trailJson = ");
      out.print( trail.getTrailJson() );
      out.write(";\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("        <!-- 상단 고정 내비게이션 바 -->\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");

	Member loginMember = (Member)session.getAttribute("loginMember");


      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("        var navLinks = document.querySelectorAll(\".nav-li a\");\r\n");
      out.write("\r\n");
      out.write("        for (var i = 0; i < navLinks.length; i++) {\r\n");
      out.write("            navLinks[i].addEventListener(\"mouseover\", function (event) {\r\n");
      out.write("                this.classList.add(\"highlighted\");\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            navLinks[i].addEventListener(\"mouseout\", function (event) {\r\n");
      out.write("                this.classList.remove(\"highlighted\");\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"top-bar\"></div>\r\n");
      out.write("<div class=\"head-div2\">\r\n");
      out.write("	<div class=\"nav-div2 container\">\r\n");
      out.write("		<ul class=\"nav-ul2\">\r\n");
      out.write("			<li class=\"nav-li2\"><a href=\"/fm/tlist\">HOME</a></li>\r\n");
      out.write("			<li class=\"nav-li2\"><a href=\"/fm/views/trail/create.jsp\">TRAIL</a></li>\r\n");
      out.write("			<li class=\"nav-li2\"><a href=\"/fm/msgcol\">MESSAGE</a></li>\r\n");
      out.write("			<li class=\"nav-li2\"><a href=\"/fm/flist?mid=");
      out.print( loginMember.getmId() );
      out.write("\">FOLLOW</a></li>\r\n");
      out.write("			<li class=\"nav-li2\" id=\"myProfile\"><a href=\"/fm/myinfo\">MYPROFILE</a></li>\r\n");
      out.write("			<li class=\"nav-li2\"><a href=\"/fm/nlist\">NOTICE</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"nav-search2\">\r\n");
      out.write("	<img class=\"search-icon2\" src=\"/fm/resources/img/search.jpeg\" onclick=\"search();\">\r\n");
      out.write("	<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\" onclick=\"logout();\" style=\"cursor: pointer;\">\r\n");
      out.write("	    <path fill-rule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\"/>\r\n");
      out.write("	    <path fill-rule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"/>\r\n");
      out.write("	</svg>\r\n");
      out.write("	</svg>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"main-logo-img2\">\r\n");
      out.write("		<a href=\"/fm/pheonix.jsp\"><img class=\"logo-img2\" src=\"/fm/resources/img/Followmelogo.png\"></a>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function logout(){\r\n");
      out.write("	location.href=\"/fm/logout\"\r\n");
      out.write("}\r\n");
      out.write("function search(){\r\n");
      out.write("	location.href=\"/fm/views/trail/search.jsp\"\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("        <h1>Trail 내용 수정</h1>\r\n");
      out.write("        <br>\r\n");
      out.write("<div class=\"card mb-4\"> <!-- 카드 간 간격 조절 -->\r\n");
      out.write("                     \r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"card-img-top container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div id=\"map\" class='col-xl-8'></div>    <!--The div element for the map -->\r\n");
      out.write("            <div class='col-xl-4'>\r\n");
      out.write("                <div id='trail_thumbs' class='row'>\r\n");
      out.write("                    <h6 align='center'>경로 정보 사진들</h6>\r\n");
      out.write("                    \r\n");
      out.write("                </div>\r\n");
      out.write("                    <hr>\r\n");
      out.write("                <div  id='nontrail_thumbs' class='row'>\r\n");
      out.write("                    <h6 align='center'>경로 정보 없는 사진들</h6>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>  <!--  row -->\r\n");
      out.write("    </div> <!--  card img -->\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap\" defer></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("async function initMap(){\r\n");
      out.write("    var map;\r\n");
      out.write("    if(trailJson.trailPhotos.length > 0) {\r\n");
      out.write("	var latDec = [];\r\n");
      out.write("	var lonDec = [];\r\n");
      out.write("    var centerLat = trailJson.trailPhotos[0].latDec;\r\n");
      out.write("    var centerLon = trailJson.trailPhotos[0].lonDec;\r\n");
      out.write("    console.log(Number(trailJson.trailPhotos[0].latDec));\r\n");
      out.write("    console.log(124 + (11 / 60));\r\n");
      out.write("    if(Number(trailJson.trailPhotos[0].latDec) >= (33 + (6 / 60)) && \r\n");
      out.write("        Number(trailJson.trailPhotos[0].latDec) <= (43) && \r\n");
      out.write("        Number(trailJson.trailPhotos[0].lonDec) >= (124 + (11 / 60)) && \r\n");
      out.write("        Number(trailJson.trailPhotos[0].lonDec) <= (131 + (52 / 60)) ){ // 첫번째 사진이 한국이면\r\n");
      out.write("    var rt = [];\r\n");
      out.write("    const { AdvancedMarkerElement, PinElement} = await google.maps.importLibrary(\"marker\");\r\n");
      out.write("    var map = new google.maps.Map(document.getElementById(\"map\"), {\r\n");
      out.write("        zoom: 18,\r\n");
      out.write("        center: { lat: centerLat, lng: centerLon },\r\n");
      out.write("        gestureHandling: \"greedy\",\r\n");
      out.write("        mapId : 'a234af45bc04ad47'\r\n");
      out.write("        });\r\n");
      out.write("    var marker = [];\r\n");
      out.write("	for (var i = 0; i < trailJson.trailPhotos.length ; i ++){\r\n");
      out.write("		latDec[i] = trailJson.trailPhotos[i].latDec;\r\n");
      out.write("		lonDec[i] = trailJson.trailPhotos[i].lonDec;\r\n");
      out.write("		console.log('latDec'+ i + ': ' + latDec[i]);\r\n");
      out.write("		console.log('lonDec'+ i + ': ' + lonDec[i]);\r\n");
      out.write("        rt.push({ lat : latDec[i], lng : lonDec[i]});\r\n");
      out.write("        marker[i] = new AdvancedMarkerElement({\r\n");
      out.write("            map,\r\n");
      out.write("            position: { lat: latDec[i], lng: lonDec[i]}\r\n");
      out.write("        })\r\n");
      out.write("        var path = '/fm/resources/upfiles/' + trailJson.trailId + '/' + trailJson.trailPhotos[i].originFileName;\r\n");
      out.write("        var thumb_path = '/fm/resources/upfiles/' + trailJson.trailId + '/' + 'thumb_' + trailJson.trailPhotos[i].originFileName;\r\n");
      out.write("        var trailId = trailJson.trailId;\r\n");
      out.write("        $('#trail_thumbs').append('<div class=\"col-md-3\"><a onclick=\"openModalm' + trailId + '(' + i + ')\"><img src=\"'+ thumb_path +'\" class=\"img-thumbnail\"></a></div>');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    console.log(rt.valueOf());\r\n");
      out.write("	centerLat = latDec.reduce(function add(sum, currValue) {\r\n");
      out.write("		  return sum + currValue;\r\n");
      out.write("		}, 0)/latDec.length;\r\n");
      out.write("	\r\n");
      out.write("	centerLon = lonDec.reduce(function add(sum, currValue) {\r\n");
      out.write("		  return sum + currValue;\r\n");
      out.write("		}, 0)/lonDec.length;\r\n");
      out.write("	const c = centerLat + ',' + centerLon\r\n");
      out.write("	console.log(c);\r\n");
      out.write("\r\n");
      out.write("    paths = new google.maps.Polyline({ //경로 정보\r\n");
      out.write("           path: rt,\r\n");
      out.write("           geodesic: true,\r\n");
      out.write("           strokeColor: 'blue',\r\n");
      out.write("           strokeOpacity: 1.0,\r\n");
      out.write("           strokeWeight: 3.0,\r\n");
      out.write("           icons : [{ //방향을 알기 위한 화살표 표시\r\n");
      out.write("            icon : {path : google.maps.SymbolPath.FORWARD_OPEN_ARROW}\r\n");
      out.write("    , offset  : '100%'\r\n");
      out.write("    , repeat : '100px'\r\n");
      out.write("           }]\r\n");
      out.write("     });\r\n");
      out.write("  paths.setMap(map);//경로를 그려야 하는 map object를 주면 된다.  \r\n");
      out.write("       } else { // 한국이 아니면 directions 서비스 호출\r\n");
      out.write("            var rt = {travelMode: google.maps.TravelMode.WALKING,\r\n");
      out.write("            waypoints :[]\r\n");
      out.write("            };\r\n");
      out.write("            for (var i = 0; i < trailJson.trailPhotos.length ; i ++){\r\n");
      out.write("                latDec[i] = trailJson.trailPhotos[i].latDec;\r\n");
      out.write("                lonDec[i] = trailJson.trailPhotos[i].lonDec;\r\n");
      out.write("                console.log('latDec'+ i + ': ' + latDec[i]);\r\n");
      out.write("                console.log('lonDec'+ i + ': ' + lonDec[i]);\r\n");
      out.write("\r\n");
      out.write("                if(i == 0){\r\n");
      out.write("                    rt.origin = new google.maps.LatLng(latDec[i], lonDec[i]);\r\n");
      out.write("                } else if (i == trailJson.trailPhotos.length - 1){\r\n");
      out.write("                    rt.destination = new google.maps.LatLng(latDec[i], lonDec[i]);\r\n");
      out.write("                } else {\r\n");
      out.write("                    rt.waypoints.push({location : new google.maps.LatLng(latDec[i], lonDec[i])});\r\n");
      out.write("                }\r\n");
      out.write("                $('#trail_thumbs').append('<div class=\"col-md-3\"><img src=\"/fm/resources/upfiles/' + trailJson.trailId + '/' + trailJson.trailPhotos[i].originFileName + '\" class=\"img-thumbnail\"></div>');\r\n");
      out.write("            }\r\n");
      out.write("            console.log(rt.valueOf());\r\n");
      out.write("            centerLat = latDec.reduce(function add(sum, currValue) {\r\n");
      out.write("                return sum + currValue;\r\n");
      out.write("                }, 0)/latDec.length;\r\n");
      out.write("            \r\n");
      out.write("            centerLon = lonDec.reduce(function add(sum, currValue) {\r\n");
      out.write("                return sum + currValue;\r\n");
      out.write("                }, 0)/lonDec.length;\r\n");
      out.write("            const c = centerLat + ',' + centerLon\r\n");
      out.write("            console.log(c);\r\n");
      out.write("\r\n");
      out.write("            var directionsService = new google.maps.DirectionsService();\r\n");
      out.write("            var directionsRenderer = new google.maps.DirectionsRenderer();\r\n");
      out.write("            var map = new google.maps.Map(document.getElementById(\"map\"), {\r\n");
      out.write("                zoom: 14,\r\n");
      out.write("                gestureHandling: \"greedy\",\r\n");
      out.write("                center: { lat: centerLat, lng: centerLon }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("            directionsRenderer.setMap(map);\r\n");
      out.write("            directionsService\r\n");
      out.write("            .route(rt)\r\n");
      out.write("            .then((response) => {\r\n");
      out.write("            directionsRenderer.setDirections(response);\r\n");
      out.write("            console.log(response);\r\n");
      out.write("            })\r\n");
      out.write("            .catch((e) => window.alert(\"Directions request failed due to \" + status));\r\n");
      out.write("       }\r\n");
      out.write("    } else { // 경로 정보 있는 사진이 없으면\r\n");
      out.write("        $('#map').css('display','none');\r\n");
      out.write("    	$('#trail_thumbs').css('display','none');	\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("        \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("if(trailJson.nonTrailPhotos.length > 0 ) {\r\n");
      out.write("        for(i = 0; i < trailJson.nonTrailPhotos.length; i++){\r\n");
      out.write("            var path = '/fm/resources/upfiles/' + trailJson.trailId + '/' + trailJson.nonTrailPhotos[i].originFileName;\r\n");
      out.write("            var thumb_path = '/fm/resources/upfiles/' + trailJson.trailId + '/' + 'thumb_' + trailJson.nonTrailPhotos[i].originFileName;\r\n");
      out.write("            var trailId = trailJson.trailId;\r\n");
      out.write("            $('#nontrail_thumbs').append('<div class=\"col-md-3\"><a onclick=\"openModalm' + trailId + '(' + i + ')\"><img src=\"'+ thumb_path +'\" class=\"img-thumbnail\"></a></div>');\r\n");
      out.write("        }\r\n");
      out.write("    } else {\r\n");
      out.write("    	$('#nontrail_thumbs').css('display','none');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>    ");
      out.write("\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("        <div class=\"form-floating mb-3\">\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"제목\">\r\n");
      out.write("            <label for=\"title\">제목</label>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"input-group mb-3 min-vh-50\">\r\n");
      out.write("        	<span class=\"input-group-text\">본문</span>\r\n");
      out.write("          <textarea class=\"form-control\" aria-label=\"본문\" id=\"body\"></textarea>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("        	\r\n");
      out.write("        <div class=\"form-floating mb-3 col\">\r\n");
      out.write("          <input type=\"text\" class=\"form-control\" id=\"tags\" placeholder=\"#해쉬태그#입력\">\r\n");
      out.write("          <label for=\"tags\">#해쉬태그#입력</label>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("        <div class=\"col\">\r\n");
      out.write("        <button class=\"btn btn-primary col\" onclick=\"insertbody();return false;\">등록</button>\r\n");
      out.write("        <a href=\"/fm/tdelete?trailId=");
      out.print( trail.getTrailId() );
      out.write("\" class=\"btn btn-primary\">삭제</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"col\">\r\n");
      out.write("        <select id=\"range\" class=\"form-select col-md-1\" aria-label=\"공개범위\">\r\n");
      out.write("            <option value=\"\" selected>공개범위 선택</option>\r\n");
      out.write("            <option value=\"P\">나만 보기</option>\r\n");
      out.write("            <option value=\"F\">팔로워에게만 공개</option>\r\n");
      out.write("            <option value=\"A\">전체 공개</option>\r\n");
      out.write("          </select>\r\n");
      out.write("         </div>\r\n");
      out.write("         <button class=\"btn btn-primary col-md-1\" onclick=\"updateRange();return false;\">수정</button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("	  <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\r\n");
      out.write("		<p class=\"col-md-4 mb-0 text-body-secondary\">&copy; 2023 Team Phoenix</p>\r\n");
      out.write("	\r\n");
      out.write("<!-- 		<a href=\"/fm/menu.jsp\" class=\"col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none\"> -->\r\n");
      out.write("<!-- 		  <svg class=\"bi me-2\" width=\"40\" height=\"32\"><use xlink:href=\"#bootstrap\"/></svg> -->\r\n");
      out.write("<!-- 		</a> -->\r\n");
      out.write("		</footer>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function insertbody(){\r\n");
      out.write("	trailJson.title = $('#title').val();\r\n");
      out.write("	console.log(trailJson.title);\r\n");
      out.write("	trailJson.body = $('#body').val();\r\n");
      out.write("	console.log(trailJson.body);\r\n");
      out.write("	trailJson.tags = $('#tags').val();\r\n");
      out.write("	console.log(trailJson);\r\n");
      out.write("	tjson = JSON.stringify(trailJson);\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"POST\",\r\n");
      out.write("		url:\"/fm/createtag\",\r\n");
      out.write("		data:{ tagname: trailJson.tags,\r\n");
      out.write("			trailid : trailJson.trailId},\r\n");
      out.write("		async: false,\r\n");
      out.write("		success:function(res){\r\n");
      out.write("			console.log(res);\r\n");
      out.write("		},\r\n");
      out.write("		error:function(XMLHttpRequest, textStatus, errorThrown){\r\n");
      out.write("			console.log(\"태그 등록 실패\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"POST\",\r\n");
      out.write("		url:\"/fm/tupdate\",\r\n");
      out.write("		data:{trailJson : tjson,\r\n");
      out.write("			trailId : trailJson.trailId},\r\n");
      out.write("		async : false,\r\n");
      out.write("		success:function(res){\r\n");
      out.write("			location.href = \"/fm/tdetail?trailId=\" + trailJson.trailId;\r\n");
      out.write("		},\r\n");
      out.write("		error:function(XMLHttpRequest, textStatus, errorThrown){\r\n");
      out.write("			alert(\"통신실패\")\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function updateRange(){\r\n");
      out.write("	console.log($('#range').val());\r\n");
      out.write("	var range = $('#range').val();\r\n");
      out.write("	var trailId = trailJson.trailId;\r\n");
      out.write("	$.ajax({\r\n");
      out.write("        type: \"POST\",\r\n");
      out.write("        url: \"/fm/tuprange\",\r\n");
      out.write("        dataType: \"text\",\r\n");
      out.write("        contentType : \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n");
      out.write("        data: {\r\n");
      out.write("        	trailId : trailId,\r\n");
      out.write("        	range: range,\r\n");
      out.write("        },\r\n");
      out.write("        error: function() {\r\n");
      out.write("          console.log('통신실패!!');\r\n");
      out.write("        },\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("          console.log(\"통신데이터 값 : \" + data);\r\n");
      out.write("        }\r\n");
      out.write("       });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	$('#title').val(trailJson.title);\r\n");
      out.write("	$('#body').val(trailJson.body);\r\n");
      out.write("	$('#tags').val(trailJson.tags);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
